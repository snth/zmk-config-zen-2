#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DFT      0
#define NAV_MOM  1
#define NAV_LCK  2
#define NAV      3
#define NUM_MOM  4
#define NUM_LCK  5
#define NUM      6
#define SYM_MOM  7
#define SYM_LCK  8
#define SYM      9
#define UTL      10


/ {
  chosen {
      zmk,physical-layout = &foostan_corne_6col_layout;
      // zmk,physical-layout = &foostan_corne_5col_layout;
  };
};

/ {
conditional_layers {
    compatible = "zmk,conditional-layers";
    nav_mom {
        if-layers = <NAV_MOM>;
        then-layer = <NAV>;
    };
    nav_lck {
        if-layers = <NAV_LCK>;
        then-layer = <NAV>;
    };
    num_mom {
        if-layers = <NUM_MOM>;
        then-layer = <NUM>;
    };
    num_lck {
        if-layers = <NUM_LCK>;
        then-layer = <NUM>;
    };
    sym_mom {
        if-layers = <SYM_MOM>;
        then-layer = <SYM>;
    };
    sym_lck {
        if-layers = <SYM_LCK>;
        then-layer = <SYM>;
    };
};

behaviors {
  hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping_term_ms = <200>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
  };

  td_shft: shift_tap_dance {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&sk RSHFT>, <&caps_word>, <&kp CAPSLOCK>;
  };
  mt_caps_shft: modtap_shift_tap_dance {
      compatible = "zmk,behavior-hold-tap";
      label = "modtap_shift_tap_dance";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <175>;
      bindings = <&kp>, <&td_shft>;
  };
  td_caps_spc:  space_tap_dance {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp SPACE>, <&caps_word>, <&kp SPACE>;
  };
  lt_caps_spc: layertap_capsword_space_tap_dance {
      compatible = "zmk,behavior-hold-tap";
      label = "layertap_capsword_space_tap_dance";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <175>;
      bindings = <&mo>, <&td_caps_spc>;
  };

  apos_o: apos_only {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp APOS>, <&kp APOS>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  semi_o: semi_only {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp SEMI>, <&kp SEMI>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  bslh_o: bslh_only {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp BSLH>, <&kp BSLH>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  slash_o: slash_only {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp SLASH>, <&kp SLASH>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  dot_o: dot_only {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp DOT>, <&kp DOT>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
  };
  comma_o: comma_only {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp COMMA>, <&kp COMMA>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
  };

  combos {
    compatible = "zmk,combos";
      
    // LHS 2-key combos
    combo2_percent {
        timeout-ms = <50>;
        key-positions = <0 1>;
        bindings = <&kp PERCENT>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_hash {
        timeout-ms = <50>;
        key-positions = <1 2>;
        bindings = <&kp HASH>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_excl {
        timeout-ms = <50>;
        key-positions = <2 3>;
        bindings = <&kp EXCL>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_enter {
        timeout-ms = <50>;
        key-positions = <3 4>;
        bindings = <&kp ENTER>;
        layers = <DFT NAV NUM SYM>;
    };

    combo2_nav_lck {
        timeout-ms = <50>;
        key-positions = <10 11>;
        bindings = <&tog NAV_LCK>;
        layers = <NAV>;
    };
    combo2_num_lck {
        timeout-ms = <50>;
        key-positions = <10 11>;
        bindings = <&tog NUM_LCK>;
        layers = <NUM>;
    };
    combo2_sym_lck {
        timeout-ms = <50>;
        key-positions = <10 11>;
        bindings = <&tog SYM_LCK>;
        layers = <SYM>;
    };

    combo2_minus_lhs {
        timeout-ms = <50>;
        key-positions = <11 12>;
        bindings = <&kp MINUS>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_tilde {
        timeout-ms = <50>;
        key-positions = <13 14>;
        bindings = <&kp TILDE>;
        layers = <DFT NAV NUM SYM>;
    };

    combo2_apostrophe {
        timeout-ms = <50>;
        key-positions = <20 21>;
        bindings = <&apos_o>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_ampersand {
        timeout-ms = <50>;
        key-positions = <21 22>;
        bindings = <&kp AMPERSAND>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_dqt {
        timeout-ms = <50>;
        key-positions = <22 23>;
        bindings = <&kp DQT>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_grave {
        timeout-ms = <50>;
        key-positions = <23 24>;
        bindings = <&kp GRAVE>;
        layers = <DFT NAV NUM SYM>;
    };
    
    // LHS 3-key combos
    combo3_mute {
        timeout-ms = <50>;
        key-positions = <0 1 2>;
        bindings = <&kp C_MUTE>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_play {
        timeout-ms = <50>;
        key-positions = <1 2 3>;
        bindings = <&kp C_PP>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_one {
        timeout-ms = <50>;
        key-positions = <2 3 4>;
        bindings = <&kp N1>;
        layers = <DFT NAV NUM SYM>;
    };  
    
    combo3_lpar {
        timeout-ms = <50>;
        key-positions = <10 11 12>;
        bindings = <&kp LPAR>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_rpar {
        timeout-ms = <50>;
        key-positions = <11 12 13>;
        bindings = <&kp RPAR>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_del {
        timeout-ms = <50>;
        key-positions = <12 13 14>;
        bindings = <&kp DEL>;
        layers = <DFT NAV NUM SYM>;
    };
    
    combo3_lbkt {
        timeout-ms = <50>;
        key-positions = <20 21 22>;
        bindings = <&kp LBKT>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_rbkt {
        timeout-ms = <50>;
        key-positions = <21 22 23>;
        bindings = <&kp RBKT>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_semi_lhs {
        timeout-ms = <50>;
        key-positions = <22 23 24>;
        bindings = <&semi_o>;
        layers = <DFT NAV NUM SYM>;
    };

    // LHS 4-key combos
    combo4_shifttab {
        timeout-ms = <50>;
        key-positions = <0 1 2 3>;
        bindings = <&kp LS(TAB)>;
        layers = <DFT NAV NUM SYM>;
    };
    combo4_shiftenter {
        timeout-ms = <50>;
        key-positions = <1 2 3 4>;
        bindings = <&kp LS(ENTER)>;
        layers = <DFT NAV NUM SYM>;
    };

    combo4_esc {
        timeout-ms = <50>;
        key-positions = <10 11 12 13>;
        bindings = <&kp ESC>;
        layers = <DFT NAV NUM SYM>;
    };
    combo4_enter {
        timeout-ms = <50>;
        key-positions = <11 12 13 14>;
        bindings = <&kp ENTER>;
        layers = <DFT NAV NUM SYM>;
    };

    combo4_left {
        timeout-ms = <50>;
        key-positions = <20 21 22 23>;
        bindings = <&kp LEFT>;
        layers = <DFT NAV NUM SYM>;
    };
    combo4_right {
        timeout-ms = <50>;
        key-positions = <21 22 23 24>;
        bindings = <&kp RIGHT>;
        layers = <DFT NAV NUM SYM>;
    };

    // RHS Combos
    // ----------------------------------------------------------------------------------------------------------------------------

    // RHS 2-key combos    
    combo2_star {
        timeout-ms = <50>;
        key-positions = <5 6>;
        bindings = <&kp STAR>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_question {
        timeout-ms = <50>;
        key-positions = <6 7>;
        bindings = <&kp QUESTION>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_at {
        timeout-ms = <50>;
        key-positions = <7 8>;
        bindings = <&kp AT_SIGN>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_dollar {
        timeout-ms = <50>;
        key-positions = <8 9>;
        bindings = <&kp DOLLAR>;
        layers = <DFT NAV NUM SYM>;
    };

    combo2_app {
        timeout-ms = <50>;
        key-positions = <15 16>;
        bindings = <&kp K_APP>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_colon {
        timeout-ms = <50>;
        key-positions = <16 17>;
        bindings = <&kp COLON>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_underscore {
        timeout-ms = <50>;
        key-positions = <17 18>;
        bindings = <&kp UNDERSCORE>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_minus {
        timeout-ms = <50>;
        key-positions = <18 19>;
        bindings = <&kp MINUS>;
        layers = <DFT NAV NUM SYM>;
    };

    combo2_bslh {
        timeout-ms = <50>;
        key-positions = <25 26>;
        bindings = <&bslh_o>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_equal {
        timeout-ms = <50>;
        key-positions = <26 27>;
        bindings = <&kp EQUAL>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_pipe {
        timeout-ms = <50>;
        key-positions = <27 28>;
        bindings = <&kp PIPE>;
        layers = <DFT NAV NUM SYM>;
    };
    combo2_plus {
        timeout-ms = <50>;
        key-positions = <28 29>;
        bindings = <&kp PLUS>;
        layers = <DFT NAV NUM SYM>;
    };

    // RHS 3-key combos
    combo3_zero {
        timeout-ms = <50>;
        key-positions = <5 6 7>;
        bindings = <&kp N0>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_caret {
        timeout-ms = <50>;
        key-positions = <6 7 8>;
        bindings = <&kp CARET>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_dollar {
        timeout-ms = <50>;
        key-positions = <7 8 9>;
        bindings = <&kp DOLLAR>;
        layers = <DFT NAV NUM SYM>;
    };
    
    combo3_bspc {
        timeout-ms = <50>;
        key-positions = <15 16 17>;
        bindings = <&kp BSPC>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_rbrc_rhs {
        timeout-ms = <50>;
        key-positions = <16 17 18>;
        bindings = <&kp RBRC>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_lbrc_rhs {
        timeout-ms = <50>;
        key-positions = <17 18 19>;
        bindings = <&kp LBRC>;
        layers = <DFT NAV NUM SYM>;
    };
    
    combo3_semi_rhs {
        timeout-ms = <50>;
        key-positions = <25 26 27>;
        bindings = <&semi_o>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_gt {
        timeout-ms = <50>;
        key-positions = <26 27 28>;
        bindings = <&kp GT>;
        layers = <DFT NAV NUM SYM>;
    };
    combo3_lt {
        timeout-ms = <50>;
        key-positions = <27 28 29>;
        bindings = <&kp LT>;
        layers = <DFT NAV NUM SYM>;
    };

    // RHS 4-key combos
    combo4_pgup {
        timeout-ms = <50>;
        key-positions = <5 6 7 8>;
        bindings = <&kp PGUP>;
        layers = <DFT NAV NUM SYM>;
    };  
    combo4_pgdn {
        timeout-ms = <50>;
        key-positions = <6 7 8 9>;
        bindings = <&kp PGDN>;
        layers = <DFT NAV NUM SYM>;
    };
    
    combo4_end {
        timeout-ms = <50>;
        key-positions = <15 16 17 18>;
        bindings = <&kp END>;
        layers = <DFT NAV NUM SYM>;
    };  
    combo4_home {
        timeout-ms = <50>;
        key-positions = <16 17 18 19>;
        bindings = <&kp HOME>;
        layers = <DFT NAV NUM SYM>;
    };

    combo4_up {
        timeout-ms = <50>;
        key-positions = <25 26 27 28>;
        bindings = <&kp UP>;
        layers = <DFT NAV NUM SYM>;
    };
    combo4_down {
        timeout-ms = <50>;
        key-positions = <26 27 28 29>;
        bindings = <&kp DOWN>;
        layers = <DFT NAV NUM SYM>;
    };

  };

};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "COLEDUST";
// -----------------------------------------------------------------------------------------
// |  Z  |  W  |  F  |  P    |  B    |    J  |  L  |  U  |  Y  |  Q  |
// |  A  |  R  |  S  |  T    |  G    |    M  |  N  |  E  |  I  |  O  |
// |  '  |  X  |  C  |  D    |  K    |    V  |  H  |  /  |  .  |  ,  |
//             | CTL |NAV/SPC|NUM/TAB|SYM/ENT| SFT | ALT |
                        bindings = <
   &kp Z         &kp W        &kp F             &kp P           &kp B       &kp J      &kp L             &kp U                  &kp Y       &kp Q
   &kp A         &kp R        &kp S             &kp T           &kp G       &kp M      &kp N             &kp E                  &kp I       &kp O
   &apos_o       &kp X        &kp C             &kp D           &kp K       &kp V      &kp H             &slash_o               &dot_o      &comma_o
                 &sk LCTRL    &lt NAV_MOM SPACE &lt NUM_MOM TAB                        &lt SYM_MOM ENTER &mt_caps_shft RSHFT 0  &sk RALT
                        >;
                };

                nav_mom_layer {
                        label = "NAV_MOM";
                        bindings = <
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
                &trans       &trans       &trans                                        &trans       &trans       &trans
                        >;
                };

                nav_lck_layer {
                        label = "NAV_LCK";
                        bindings = <
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
                &trans       &trans       &trans                                        &trans       &trans       &trans
                        >;
                };

                nav_layer {
                        label = "NAV";
// -----------------------------------------------------------------------------------------
// | MUTE| PGDN| PGUP| PLAY| F11 | F12  | HOME | PGUP | PGDN | END  |
// | INS | RET | TAB | ESC | DEL | BSPC | LEFT |  UP  | DOWN | RIGHT|
// | UNDO| CUT | COPY|PASTE|CTL+K|  \   |  =   |  /   |  .   |  ,   |
//             |     |     |     |      |      |      |
                        bindings = <
   &kp C_MUTE    &kp PG_DN    &kp PG_UP         &kp C_PP      &kp F11     &kp F12    &kp HOME        &kp PG_UP                &kp PG_DN  &kp END
   &hm LALT INS  &hm LGUI RET &hm LSHFT TAB     &hm LCTRL ESC &kp DEL     &kp BSPC   &kp LEFT        &kp UP                   &kp DOWN   &kp RIGHT
   &kp LC(Z)     &kp LC(X)    &kp LC(C)         &kp LC(V)     &kp LC(K)   &bslh_o    &kp EQUAL       &trans                   &trans     &trans
                 &trans       &kp SPACE         &trans                               &trans          &lt_caps_spc UTL 0       &trans
                        >;
                };

                num_mom_layer {
                        label = "NUM_MOM";
                        bindings = <
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
                &trans       &trans       &trans                                        &trans       &trans       &trans
                        >;
                };

                num_lck_layer {
                        label = "NUM_LCK";
                        bindings = <
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
                &trans       &trans       &trans                                        &trans       &trans       &trans
                        >;
                };

                num_layer {
                        label = "NUM";
// -----------------------------------------------------------------------------------------
// |  7  |  5  |  3  |  1  |  9  |  8  |  0  |  2  |  4  |  6  |
// |  (  |  [  |  ]  |  )  | DEL | BSPC|  ;  |  >  |  <  |  -  |
// |  '  |  {  |  }  |  "  |  `  |  \  |  =  |  /  |  .  |  ,  |
//             |     |     |     |     |     |     |
                        bindings = <
   &kp N7        &kp N5        &kp N3            &kp N1         &kp N9      &kp N8     &kp N0          &kp N2                 &kp N4         &kp N6
   &hm LALT LPAR &hm LGUI LBKT &hm LSHFT RBKT    &hm LCTRL RPAR &kp DEL     &kp BSPC   &hm RCTRL SEMI  &hm RSHFT GT           &hm RGUI LT    &hm RALT MINUS
   &trans        &kp LBRC      &kp RBRC          &kp DQT        &kp GRAVE   &bslh_o    &kp EQUAL       &trans                 &trans         &trans
                 &trans        &kp SPACE         &trans                                &trans          &mt_caps_shft RSHFT 0  &trans
                         >;
                };

                sym_mom_layer {
                        label = "SYM_MOM";
                        bindings = <
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
                &trans       &trans       &trans                                        &trans       &trans       &trans
                        >;
                };

                sym_lck_layer {
                        label = "SYM_LCK";
                        bindings = <
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
   &trans       &trans       &trans       &trans       &trans              &trans       &trans       &trans       &trans       &trans
                &trans       &trans       &trans                                        &trans       &trans       &trans
                        >;
                };

                sym_layer {
                        label = "SYM";
// -----------------------------------------------------------------------------------------
// |  &  |  %  |  #  |  !  |ENTER|  *  |  ?  |  @  |  $  |  ^  |
// |  (  |  [  |  ]  |  )  | DEL | BSPC|  ;  |  >  |  <  |  -  |
// |  '  |  {  |  }  |  "  |  `  |  \  |  =  |  /  |  .  |  ,  |
//             |     |     |     |     |     |     |
                        bindings = <
   &kp AMPERSAND &kp PERCENT   &kp HASH          &kp EXCL       &kp ENTER   &kp STAR   &kp QUESTION    &kp AT_SIGN            &kp DOLLAR     &kp CARET
   &hm LALT LPAR &hm LGUI LBKT &hm LSHFT RBKT    &hm LCTRL RPAR &kp DEL     &kp BSPC   &hm RCTRL SEMI  &hm RSHFT GT           &hm RGUI LT    &hm RALT MINUS
   &trans        &kp LBRC      &kp RBRC          &kp DQT        &kp GRAVE   &bslh_o    &kp EQUAL       &trans                 &trans         &trans
                 &trans        &kp SPACE         &trans                                &trans          &mt_caps_shft RSHFT 0  &trans
                        >;
                };

                utl_layer {
                        label = "UTL";
// -----------------------------------------------------------------------------------------
// | MUTE| PREV| NEXT| PLAY | F11 |  F12 | LOCK |VOL_UP|VOL_DN|CPSLCK|
// | F7  | F5  | F3  | F1   | F9  |  F8  |  F10 |  F2  |  F4  |  F6  |
// | BACK| DOWN| UP  | FWD  | ??? | BTCLR|  BT0 |  BT1 |  BT2 |  BT3 |
//             |     |      |     |      |      |      |
                        bindings = <
   &kp C_MUTE   &kp C_PREV        &kp C_NEXT      &kp C_PP      &kp F11         &kp F12    &kp LG(L)       &kp C_VOL_UP    &kp C_VOL_DN   &kp CAPSLOCK
   &hm LALT F7  &hm LGUI F5       &hm LSHFT F3    &hm LCTRL F1  &kp F9          &kp F8     &hm RCTRL F10   &hm RSHFT F2    &hm RGUI F4    &hm RALT F6
   &kp K_BACK   &kp K_SCROLL_DOWN &kp K_SCROLL_UP &kp K_FORWARD &kp C_AC_SEARCH &bt BT_CLR &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3
                &trans            &trans          &trans                                   &trans          &trans          &trans
                        >;
                };
                
    };
};
